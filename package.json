{
  "name": "brf-saas",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "prisma generate && next build",
    "start": "next start",
    "lint": "next lint",
    "postinstall": "prisma generate",
    "test": "NODE_ENV=test jest",
    "test:watch": "NODE_ENV=test jest --watch",
    "test:coverage": "NODE_ENV=test jest --coverage",
    "dev:test": "NODE_ENV=test next dev",
    "dev:staging": "DEPLOYMENT_ENV=staging next dev",
    "copy-prod-to-dev": "ts-node src/scripts/copy-production-data.ts dev",
    "copy-prod-to-test": "ts-node src/scripts/copy-production-data.ts test",
    "copy-prod-to-staging": "ts-node src/scripts/copy-production-data.ts staging",
    "build:staging": "DEPLOYMENT_ENV=staging next build",
    "start:staging": "DEPLOYMENT_ENV=staging next start",
    "update-site-url:dev": "NODE_ENV=development node scripts/update_supabase_site_url.js",
    "update-site-url:staging": "DEPLOYMENT_ENV=staging node scripts/update_supabase_site_url.js",
    "update-site-url:prod": "NODE_ENV=production node scripts/update_supabase_site_url.js",
    "prisma:generate:staging": "DEPLOYMENT_ENV=staging prisma generate --schema=./prisma/schema.staging.prisma",
    "prisma:migrate:staging": "DEPLOYMENT_ENV=staging prisma migrate deploy --schema=./prisma/schema.staging.prisma",
    "prisma:db:push:staging": "DEPLOYMENT_ENV=staging prisma db push --schema=./prisma/schema.staging.prisma",
    "prisma:studio:staging": "DEPLOYMENT_ENV=staging prisma studio --schema=./prisma/schema.staging.prisma",
    "prisma:seed": "ts-node prisma/seed.ts",
    "db:reset": "prisma migrate reset --force && npm run prisma:seed",
    "schema:push:staging": "ts-node src/scripts/sync-schema.ts push staging",
    "schema:pull:staging": "ts-node src/scripts/sync-schema.ts pull staging",
    "schema:push:prod": "ts-node src/scripts/sync-schema.ts push production",
    "schema:pull:prod": "ts-node src/scripts/sync-schema.ts pull production",
    "stripe:webhook": "stripe listen --forward-to http://localhost:3000/api/stripe/webhook",
    "stripe:webhook:staging": "stripe listen --forward-to https://staging.handbok.org/api/stripe/webhook",
    "dev:with-stripe": "concurrently \"npm run dev\" \"npm run stripe:webhook\"",
    "verify:onboarding": "node scripts/verify-onboarding.js",
    "compare-auth:dev": "NODE_ENV=development node src/scripts/compare-auth.js",
    "compare-auth:staging": "NODE_ENV=staging node src/scripts/compare-auth.js",
    "ts:validate": "node src/scripts/ts-validate.js",
    "pre-push": "npm run ts:validate"
  },
  "dependencies": {
    "@heroicons/react": "^2.2.0",
    "@mantine/core": "^7.17.7",
    "@mantine/hooks": "^7.17.7",
    "@prisma/client": "^6.7.0",
    "@radix-ui/react-alert-dialog": "^1.1.11",
    "@radix-ui/react-dialog": "^1.1.11",
    "@radix-ui/react-slot": "^1.2.0",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.49.4",
    "@tabler/icons-react": "^3.31.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "dotenv": "^16.3.1",
    "firebase": "^11.6.1",
    "lucide-react": "^0.506.0",
    "next": "14.2.28",
    "react": "^18",
    "react-dom": "^18",
    "shadcn-ui": "^0.9.5",
    "stripe": "^18.1.0",
    "tailwind-merge": "^3.2.0",
    "tailwindcss-animate": "^1.0.7"
  },
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@testing-library/jest-dom": "^6.1.5",
    "@testing-library/react": "^14.1.2",
    "@testing-library/user-event": "^14.5.1",
    "@types/jest": "^29.5.10",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "autoprefixer": "^10.0.1",
    "eslint": "^8",
    "eslint-config-next": "14.2.28",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "node-fetch": "^3.3.2",
    "postcss": "^8",
    "postcss-import": "^16.1.0",
    "prisma": "^6.7.0",
    "tailwindcss": "^3.3.0",
    "typescript": "^5"
  }
}
